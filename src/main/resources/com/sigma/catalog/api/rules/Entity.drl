package  com.sigma.catalog.api.rules
 
import com.sigma.catalog.api.model.rules.Fact;
import com.sigma.catalog.api.utility.StringUtility;
import com.sigma.catalog.api.drools.ResponseHelper;
import com.sigma.catalog.api.utility.ImportUtility;
import com.sigma.catalog.api.utility.CatalogProperties;
import com.sigma.catalog.api.catalog.FactsForAttributes;
import com.sigma.catalog.api.catalog.CatalogServicesAPI;
import com.sigma.catalog.api.configuration.ConfigurationConstants;
import com.sigma.catalog.api.configuration.CatalogConstants;
import com.sigma.catalog.api.database.CatalogDBOperations;
import java.io.*;
import java.util.List;
import java.util.ArrayList;
global ResponseHelper responseHelper;
global CatalogProperties catalogProperties;
global ImportUtility importUtility;
global FactsForAttributes factsForAttributes;
global CatalogServicesAPI catalogServicesAPI;


rule "General"
    when
        fact:Fact(coloum == "intent" || coloum == "availablestartdate" || coloum == "effectivestartdate" || coloum == "categoryid" || coloum == "businessid" || coloum == "maxoccurs" || coloum == "minoccurs"
        || coloum == "associationstartdate" || coloum == "associationenddate" || coloum == "defaultcardinality" || coloum == "weight" || coloum == "context" || coloum == "description" || coloum == "refid"
        || coloum == "sequence" || coloum == "isdefault" || coloum == "description" || coloum == "uid" || coloum == "value" || coloum == "isuserdefinedvalue" || coloum == "cpqbehavioriscalculated" || coloum ==  "characteristicname"
        || coloum == "cpqbehaviorisdefaulted" || coloum == "cpqbehaviorpluginid" || coloum == "cpqbehaviorexternalcapturegrp" ||  coloum == "cpquibehavioruseasdisplayname" || coloum == "cpquibehaviortooltipid"
        || coloum == "cpquibehaviorconfirmation" || coloum == "cpquibehaviorishidden" || coloum == "cpquibehaviorisreadonly" || coloum == "cpquibehaviorpluginid"   || coloum == "displayname" || coloum == "displayorder" || coloum == "displaydescription"
        || coloum == "udcname" || coloum == "startdate" || coloum == "enddate" || coloum == "conditionname" || coloum == "conditionscope" || coloum == "conditiontype" || coloum == "soc" || coloum == "offerid" || coloum == "offername"
        || coloum == "pricingitemname" || coloum == "attributename" || coloum == "allowancesubtype" || coloum == "opecfschar" || coloum == "startdate" || coloum == "enddate" || coloum == "rate" || coloum == "packagekeyword"
        || coloum == "addedtask" || coloum == "flag" || coloum == "remarks" || coloum == "businessdescription" || coloum == "endproductdate" || coloum == "availableenddate" || coloum == "effectiveenddate" || coloum == "sendthisproductto"
        || coloum == "isdefault" || coloum == "targetstate" || coloum == "replace" || coloum ==  "targetvalues" || coloum ==  "skipifentityexists" || coloum ==  "skipifvaluesexist" || coloum ==  "actionmetid"  || coloum ==  "actionnotmetid"
        || coloum == "minimumbalance" || coloum == "transactionprice" || coloum == "minchildren" || coloum == "maxchildren" || coloum == "maxcardinality" || coloum == "mincardinality" || coloum == "defaultcardinality"
        || coloum == "targetsystemname" || coloum == "targetsystemdescription" || coloum == "namesubid" || coloum =="endconsumedate" || coloum == "flag" || coloum == "volume" || coloum == "promotedoffer"
        || coloum == "longdescription" || coloum =="namesub" || coloum == "offerpriority" || coloum == "originalprice" || coloum == "promotionalicon" || coloum == "recommendedofferpriority" || coloum == "shortdescription"
        || coloum == "counterflag" || coloum == "packagekeyword" || coloum == "quotagiftpersubscriber" || coloum == "notificationbahasa"|| coloum == "notificationenglish" 
        || coloum == "notification" || coloum == "literal" || coloum == "quota" || coloum == "pricingname" || coloum == "validity" || coloum == "priceitemid" || coloum =="billdescription"
        || coloum == "productid" || coloum == "denom" || coloum == "interval" || coloum == "value1" || coloum == "value2" || coloum == "number" || coloum == "errormessage" || coloum == "quotaname"
        || coloum == "currency" || coloum == "seasonset" || coloum == "timeset" || coloum == "applylossfactor" || coloum == "consumptionrate" || coloum == "historicalquota" || coloum == "bahasalanguage" || coloum == "bahasacommercialname" || coloum == "englishlanguage" || coloum == "englishcommercialname"
        || coloum == "transactionprice" || coloum == "namesubid" || coloum == "rfsappsid" || coloum == "productfamily" || coloum == "pcrfrenewalprovisioning" || coloum == "discountedtransactionprice" || coloum == "originalprice"
        || coloum == "ifrsindicator" || coloum == "losvalue1" || coloum == "losvalue2" || coloum == "minimumvalue1" || coloum == "minimumvalue2" || coloum == "longdescriptionbahasalanguage" || coloum == "longdescriptionbahasa"
        || coloum == "longdescriptionenglishlanguage" || coloum == "longdescriptionenglish" || coloum == "shortdescriptionbahasalanguage" || coloum == "shortdescriptionbahasa" || coloum == "shortdescriptionenglishlanguage"
        || coloum == "shortdescriptionenglish" || coloum == "bonusappsid" || coloum == "contentid" || coloum == "pcrfpackage" || coloum == "pcrfaccumulation" || coloum == "bonusdescription" || coloum == "adn" || coloum == "keyword"
        || coloum == "quotaname" || coloum == "quotainterval" || coloum == "timeband" || coloum == "primary" || coloum == "countergroup" || coloum == "rfsreminder" || coloum == "bbpackage" || coloum == "renewaltime"
        || coloum == "revenue" || coloum == "activepackage" || coloum == "canreplace" || coloum == "recommendedofferpriority" || coloum == "tagging" || coloum == "ifrscalculate" || coloum == "countergroup"
        || coloum == "productid" || coloum == "tcashsplitcode" || coloum == "promotionalicon" || coloum == "evaluationpriority" || coloum == "uxpbusinessproductid" || coloum == "businessname" 
        || coloum == "namebahasaindonesia" || coloum == "displaypriority" || coloum == "longdescriptionbahasaindonesia" || coloum == "shortdescriptionbahasaindonesia" || coloum == "uxpcontextid"
        || coloum == "headerbahasaindonesia" || coloum == "commercialnameoverridebahasaindonesia" || coloum == "commercialnameoverrideenglish" || coloum == "headerenglish" || coloum == "nameenglish" || coloum == ""
        || coloum == "termsandconditionsbahasaindonesia" || coloum == "program" || coloum == "termsandconditionsenglish" || coloum == "eligiblebrandsmaxoccurs" || coloum == "eligiblebrandsminoccurs" || coloum == "eligibledaysmaxoccurs"
        || coloum == "eligibledaysminoccurs" || coloum == "commercialname" || coloum == "versionnumber" || coloum == "nextlevelname" || coloum == "poinid" || coloum == "puid" || coloum == "psubj" || coloum == "ppass" || coloum == "tcashbalanceid" || coloum == "bonusid"|| coloum == "omsbbservices"
        || coloum == "resourcesdefinition" || coloum == "loopportalid" || coloum == "openroamingbarring" || coloum == "eligiblebrandmaxoccurs" || coloum == "eligiblebrandminoccurs"|| coloum == "roamingfeaturedproduct" || coloum == "promotedoffer"
        || coloum == "counter" || coloum == "poin" || coloum == "tcash" || coloum == "tcbonusappsid" || coloum == "coupon" || coloum == "postpaidpackageid" || coloum == "incentiveconditions"
        || coloum == "retryrenewal"|| coloum == "reestablishrestriction" || coloum == "postpaidproducttype" || coloum == "invoicedefinition" || coloum == "reportinglevel" || coloum == "psreportinglevel" 
        || coloum == "bucketbahasadescription" || coloum == "bucketbahasalanguage" || coloum == "bucketenglishdescription" || coloum == "bucketenglishlanguage" || coloum == "metricvalidityperiod" || coloum =="defaultvalue"
        || coloum =="bcflagmappingguid" || coloum =="productzonereference" || coloum =="pricezonereference" || coloum =="prorationmethod" || coloum=="promotionalflag" || coloum=="ruletype" || coloum=="rulename" || coloum=="billdescription" || coloum == "perunit" || coloum == "unitrate" || coloum == "step"
        || coloum == "unitslessorequalto" || coloum == "ratedescription" || coloum == "rateattributeclass" || coloum == "unitsgreaterorequalto" || coloum == "changeid" || coloum == "glacctcode" || coloum == "steplimit" || coloum == "submitdate" || coloum == "pricekey1" || coloum == "pricekey2" || coloum == "dailydataareaid"
        || coloum == "marketingclass" || coloum == "marketingguid" || coloum == "ratingplantimeband" || coloum == "supplypointtimeband" || coloum == "marketingxsdname" || coloum == "timebandmappingxsdname" || coloum == "consumptionunitsxsdname" || coloum == "inclusivelossfactorsxsdname" || coloum == "hasusedaylightsavingtimeattribute"
        || coloum == "supplypointtype" || coloum == "ratingplanid" || coloum == "psid" || coloum == "pskey"  || coloum == "dateend" || coloum == "datestart" || coloum == "value" || coloum == "timebandattributeclass" || coloum == "usedaylightsavingtimeattributeclass" || coloum == "inclusivelossfactorsattributeclass" || coloum == "consumptionunitsattributeclass"
        || coloum == "usedaylightsavingtimexsdname"  || coloum == "etimechargeid" || coloum == "minimumdemand" || coloum == "additionaldemandtimeband" || coloum == "additionalminimumdemand" || coloum == "upliftoverspotprice" || coloum == "flatcharge" || coloum == "consumptionvalueattributeclass" || coloum == "demandunitsattributeclass" || coloum == "demandsourceofagreedcapacityattributeclass"
        || coloum == "demandunitsxsdname"  || coloum == "demandsourceofagreedcapacityxsdname"  || coloum == "consumptionvaluexsdname" || coloum == "metertype" || coloum == "supplypointtype" || coloum == "savedata" || coloum == "duration" || coloum == "sequencenumber" || coloum == "offsetrate" || coloum == "discountamount" 
        || coloum == "capamountattributeclass" || coloum == "baseamountattributeclass" || coloum == "notificationpercentageattributeclass"
	    || coloum == "discountpercentage"|| coloum == "control"|| coloum == "discountplanfieldlevelcontrol"|| coloum == "lookupid" || coloum =="gasoffersummary" || coloum == "electricityoffersummary"
	    || coloum == "anniversarybasedate"|| coloum == "adjustmentaccumulatorflag" || coloum == "discount" || coloum == "capamountxsdname" || coloum == "baseamountxsdname"
	    || coloum == "notificationpercentagexsdname" || coloum == "discountplanid" || coloum == "completeflag" || coloum == "accumulatorid" || coloum == "description"
 	    || coloum == "threshold" || coloum == "discount" || coloum == "orderofexecution" || coloum == "isexclusive" || coloum == "description" || coloum == "discountperiodclass"
	    || coloum == "productlineclass" || coloum == "chargeexgstclass" || coloum == "discountpercentage" || coloum == "chargeexgst" || coloum == "eligibilityruleid" || coloum == "schedulingruleid"
	    || coloum == "maxcustportfolioinstances" || coloum == "mincustportfolioinstances" || coloum == "cpqdisconnectioncharge" || coloum == "discountinformationforratesheet"
	    || coloum == "productid" || coloum == "powerquoteproductid" || coloum == "intrastatcode" || coloum == "documentname" || coloum == "systemsizekw" || coloum == "invpsdirtyflg" || coloum == "quantity"
	    || coloum == "vintagexsdname"  || coloum == "productdocumentxsdname"  || coloum == "warrantytermxsdname" || coloum == "vintageattributeclass" || coloum == "warrantytermattributeclass" 
	    || coloum == "productdocumentattributeclass" || coloum == "actstart" || coloum == "actend" || coloum == "rate" || coloum == "excludeddiscountplanlist" || coloum == "parent"
	    || coloum == "advanceexpirynotificationperiod" || coloum == "electricityoffernumber" || coloum == "maxelectricitycosttoacquire" || coloum == "greenpowerpercentage" || coloum == "gasoffernumber" || coloum == "maxgascosttoacquire"
	    || coloum == "sales" || coloum == "exitchurnrate" || coloum == "offersheldtomaturity" || coloum == "offerid" || coloum == "terminationfeegraceperiod" || coloum == "electricityexitfees"
	    || coloum == "exitfeegraceperiod" || coloum == "exitfeebeforecontractstartfeewaiverreason" || coloum == "additionalelectricitycontractdetails" || coloum == "electricityeligibilitycriteria"
	    || coloum == "gasexitfees" || coloum == "gaseligibilitycriteria" || coloum == "benefitperiod" || coloum == "contractdurationterms" || coloum == "addnote" || coloum == "documents" || coloum == "offercode"
	    || coloum == "marketingprice" || coloum == "marketingrecurringprice" || coloum == "marketingtagline" || coloum == "electricityofferdescription" || coloum == "greenpercentageterms" || coloum == "gasofferdescription"
	    || coloum == "electricitycoolingoffperiod" || coloum == "gascoolingoffperiod" || coloum == "offersummary" || coloum == "contractdurationterms" || coloum == "image"
	    || coloum == "offercode" || coloum == "marketingxsdname" || coloum == "defaultrenewalofferxsdname" || coloum == "marketstatusxsdname" || coloum == "marketingattributeclass" || coloum == "defaultrenewalofferattributeclass" || coloum == "marketstatusattributeclass" || coloum == "overridevalue" || coloum == "targetrefernce" || coloum == "documentsattributeclass"|| coloum == "rewardsattributeclass" || coloum == "bundleattributeclass" || coloum == "electricityexitfeesattributeclass" || coloum == "gasexitfeesattributeclass"  || coloum == "discountplansattributeclass"
	    || coloum == "targetreferenceclasstype"  || coloum =="parentrplanid" || coloum =="billasatdate" || coloum =="discountplantype" || coloum == "documentsxsdname" || coloum == "saleschanneltoofferattributeclass" || coloum == "saleschanneltoofferxsdname" || coloum == "donotsell"|| coloum == "incentiveconditions" || coloum == "rewardsxsdname" || coloum == "electricityexitfeesxsdname"|| coloum == "gasexitfeesxsdname" || coloum == "discountplansxsdname" || coloum == "bundleattributesxsdname" || coloum =="newsequence" || coloum == "product" || coloum == "skudescription"
   	    || coloum == "skunumber" || coloum == "contractyear" || coloum == "productcode" || coloum == "ntctortcmappingattributeclass" || coloum == "ntctortcmappingxsdname" || coloum == "ntc" || coloum == "distributor" || coloum == "referencexsdname" || coloum == "referenceclass" || coloum == "discountplansrelationattributeclass" || coloum == "discountplansrelationxsdname" || coloum == "discountinformationforratesheet"
   	    || coloum == "meteringchargeinformationforratesheet" || coloum == "demandinformationforratesheet" || coloum == "electricityeligibilitycriteriaforwelcomepack" || coloum == "gaseligibilitycriteriaforwelcomepack" || coloum == "electricitytermsandconditions" || coloum == "electricitypricevariationdescription" || coloum =="controlledloaddetails" || coloum == "electricityadditionalfeeterms" || coloum == "electricityexpirydetails" || coloum == "gastermsandconditions" || coloum == "gaspricevariationdescription"
   	    || coloum == "gasadditionalfeeterms" || coloum =="gasexpirydetails" || coloum == "electricitycontractdetails" || coloum == "gascontractdetails" || coloum == "fitdescription" || coloum == "feedescription" || coloum =="restrictiondescription" || coloum == "restrictiondetails" 
   	    || coloum == "solarfitattributeclass" || coloum == "solarfitxsdname" || coloum == "electricityoffereligibilityattributeclass" || coloum == "electricityoffereligibilityxsdname" || coloum == "electricityotherfeesattributeclass" || coloum == "electricityotherfeesxsdname" || coloum == "gasoffereligibilityattributeclass" || coloum == "gasoffereligibilityxsdname" || coloum == "gasotherfeesattributeclass" || coloum == "gasotherfeesxsdname" || coloum == "discountplanclasstype" || coloum == "feedintype" || coloum == "floorrate" || coloum == "quotemessage" || coloum == "termsandconditions" || coloum == "productinformation" || coloum == "additionalofferscripting"
   	    || coloum == "ruleevaluationmethodattributeclass" || coloum == "ruleevaluationmethodxsdname")
    then
        fact.setSameDataToRow();
end

rule "RatePath"
	when
        fact:Fact(coloum == "ratepath" || coloum == "path" || coloum == "overridepath")
	then
		fact.setDataAndRow(responseHelper.getPath(fact.getDataFromRow()));
end

rule "DeleteChar"
	when
	fact:Fact (coloum == "eligiblelocation" || coloum == "eligiblebrand" || coloum == "categoryforrenewal" || coloum == "eligibletimeframe" || coloum == "eligiblepriceplan" || coloum == "eligiblepurchasecounter"|| coloum == "eligibledays" ||
	coloum == "validityperiod" || coloum == "eligiblequotaperproduct" || coloum =="eligiblelos" || coloum =="eligiblendc" || coloum =="eligiblerenewaltype" || 	coloum =="eligiblechannel")
	then
		fact.setSameDataToRow();
end		


rule "ClassType"
    when
        fact:Fact(coloum == "classtype" || coloum == "lookupclassname" || coloum == "characteristicclassname" ||  coloum == "characteristicclass" || coloum == "characteristicvalueclassname"
        || coloum == "entityclasstype" || coloum =="mappingruleclasstype"  || coloum == "characteristicclass" || coloum == "characteristicxsdname"
        || coloum == "rateclass" || coloum == "actionname" || coloum == "overridesclasstype" || coloum == "parententityclasstype" || coloum == "overriddenentityclasstype" || coloum == "elementxsdname" || coloum == "leafclass")
    then  
        String classType = StringUtility.removeSpaceWithUnderScore(fact.getDataFromRow());
        fact.setDataAndRow(classType);
end

rule "PublicId"
    when
        fact:Fact(coloum == "publicid")
    then  
       String guid = responseHelper.getGuid(fact.getDataFromRow(),fact.getDataFromRow("name"),fact.getDataFromRow("classtype"));
       fact.setDataAndRow(guid);     
end

rule "getDecoratorGuid"
    when
        fact:Fact(coloum == "getDecoratorGuid")
    then  
       String guid = responseHelper.getDecoratorGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));
       fact.setDataAndRow(guid);     
end

rule "getCustomMultipleFactGuidByParent"
 when
        fact:Fact(coloum == "getCustomMultipleFactGuidByParent")
	 then  
       List<String> guid = responseHelper.getCustomMultipleFactGuidByParent(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));
       fact.setData(guid);   
end			

rule "changeDateTime"
	when
		fact:Fact(coloum == "changeDateTime")
    then  
       String dateTime = responseHelper.getDateTime(fact.getActionDataFromRow(0));
       fact.setDataAndRow(dateTime);
end


rule "New Guid"
    when
        fact:Fact(coloum == "newguid")
    then        
       fact.setDataAndRow(responseHelper.genrateNewGuid());     
end

rule "Name"
    when
		fact:Fact(coloum == "name")
    then  
		fact.setSameDataToRow();       
end

rule "getIntent"
    when
        fact:Fact(coloum == "getIntent")
    then  
        if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.NEW))
        {
       	 fact.setDataAndRow("New");
      	 fact.setDataToRowByActionParm("New");
        }
        else{
        	 fact.setData(CatalogConstants.MODIFY);
        }
end

rule "checkIfRateExists"
    when
        fact:Fact(coloum == "checkIfRateExists")
    then  
        if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.NEW))
        {
        	if(responseHelper.checkIfDecoratorExists(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1), fact.getActionDataFromRow(2)))
        	{
        		fact.setData(CatalogConstants.MODIFY);
        		fact.setDataToRow("Append","intent");
        		fact.setDataToRowByActionParm("Append");
        	}
        	else {
        		 fact.setDataAndRow("New");
        	}
        }
        else {
        	 fact.setData(CatalogConstants.MODIFY);
        }
end

rule "getInnerRateClassIntent"
    when
        fact:Fact(coloum == "getInnerRateClassIntent")
    then  
       if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.NEW)
         || StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.APPEND))
        {
       		 fact.setDataAndRow("New");
        }
         else if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.DELETE))
        {
        	fact.setDataAndRow("Delete");
        }
        else{
        	 fact.setData(CatalogConstants.MODIFY);
        }
end



rule "getRateClassIntent"
	when
		fact:Fact(coloum == "getRateClassIntent")
	then
		if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),CatalogConstants.DELETE))
		{
			fact.setData("Delete");
		}
		else{
			fact.setData("New");
		}
end		

rule "Rate Row Guid"
	when
		fact:Fact(coloum == "raterowguid")
	then
		String guid = responseHelper.getGuid(fact.getDataFromRow());
		fact.setDataAndRow(guid);
		String parentGuid = responseHelper.getGuid(fact.getDataFromRow("parententityguid"),fact.getDataFromRow("parententityname"),fact.getDataFromRow("parententityclasstype"));
		fact.setParentGuid(parentGuid);
end

rule "Association GUID"
	when
		fact:Fact(coloum == "associationguid" || coloum == "characteristicguid" || coloum == "characteristicvalueid" ||  coloum == "mappingruleguid" || coloum == "overridesguid"
				 || coloum == "characteristicsmappingguid" || coloum == "compatibilityruleguid" || coloum == "legacytransitionguid" || coloum == "notificationguid" || coloum == "definitionguid"
				 || coloum == "incompatibilityruleguid" || coloum == "zoneguid" || coloum =="notificationbahasaguid" || coloum =="notificationtypeguid"	|| coloum =="notificationenglishguid"
				 || coloum == "conditionguid" || coloum == "counterguid" || coloum == "entityvalueguid" || coloum == "actionguid" || coloum == "targetvaluesguid"
				 || coloum == "cityguid" || coloum == "conditionguid" || coloum == "rateattributeguid" || coloum == "marketingguid" || coloum == "timebandattributeguid" || coloum == "usedaylightsavingtimeattributeguid"
				 || coloum == "inclusivelossfactorsattributeguid" || coloum == "consumptionunitsattributeguid" || coloum == "consumptionvalueattributeguid" || coloum == "demandunitsattributeguid"
				 || coloum == "demandsourceofagreedcapacityattributeguid" || coloum == "discountguid" || coloum == "offsetfieldsguid" || coloum == "capamountattributeguid" || coloum == "baseamountattributeguid" || coloum == "notificationpercentageattributeguid"
   			     || coloum == "discountperiodguid" || coloum == "productlineguid" || coloum == "chargeexgstguid" || coloum == "vintageattributeguid" || coloum == "warrantytermattributeguid" || coloum == "productdocumentattributeguid"
   			   	 || coloum == "marketingattributeguid" || coloum == "defaultrenewalofferattributeguid" || coloum == "marketstatusattributeguid" || coloum == "documentsattributeguid" || coloum == "saleschanneltoofferattributeguid" || coloum == "rewardsattributeguid" || coloum == "discountplansattributeguid" || coloum == "bundleattributeguid"
				 || coloum == "electricityexitfeesattributeguid" || coloum == "gasexitfeesattributeguid" || coloum == "solarfitattributeguid" || coloum == "electricityotherfeesattributeguid" || coloum == "electricityoffereligibilityattributeguid" || coloum == "gasotherfeesattributeguid" || coloum == "gasoffereligibilityattributeguid"
   				 || coloum == "discountplanguid" || coloum == "ntctortcmappingattributeguid" || coloum =="referenceguid" || coloum =="discountplansrelationattributeguid" || coloum =="ruleevaluationmethodattributeguid")
	then
		String guid = responseHelper.getGuid(fact.getDataFromRow());
		fact.setDataAndRow(guid);
end

rule "ParentEntityGuid"
	when
		fact:Fact(coloum == "parententityguid" || coloum == "entityguid" || coloum =="leafguid")
	then
		String guid = responseHelper.getGuid(fact.getDataFromRow(),fact.getDataFromRow("parententityname"),fact.getDataFromRow("classtype"));
		fact.setDataAndRow(guid);
 end
 
rule "getEntityGuid"
	when
		fact:Fact(coloum == "getEntityGuid")
	then
		String guid = responseHelper.getGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),fact.getActionDataFromRow(2));
		fact.setDataAndRow(guid);
		fact.setDataToRowByActionParm(guid);
 end
 
 rule "getAssociatedEntityGuid"
	when
		fact:Fact(coloum == "getAssociatedEntityGuid")
	then
		String guid = responseHelper.getGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),fact.getActionDataFromRow(2),fact.getActionDataFromRow(3));
		fact.setDataAndRow(guid);
		fact.setDataToRowByActionParm(guid);
 end
 
 
rule "getEntityGuidbyName"
 	when
		fact:Fact(coloum == "getEntityGuidbyName")
	then
		String guid = responseHelper.getGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),"");
		fact.setDataAndRow(guid);
		fact.setDataToRowByActionParm(guid);
 end
 
 rule "getOverridesClassType"
  	when
		fact:Fact(coloum == "getOverridesClassType")
	then
		String overrideClassType = catalogProperties.getCatalogPropertyValue(fact.getActionDataFromRow(0), "Class not found");
		fact.setData(overrideClassType);
       
 end
 
 rule "getFactGuidbyName"
 when
 		fact:Fact(coloum == "getFactGuidbyName")
 	then
 		System.out.println(fact.getActionDataFromRow(0) + "name is :- "+fact.getActionDataFromRow(1) + "data is :- "+fact.getActionDataFromRow(2));
 		String guid = responseHelper.getFactGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),fact.getActionDataFromRow(2));
 		fact.setDataAndRow(guid);
                fact.setDataToRowByActionParm(guid);
end

rule "getEntityGuidbyNameAndReference"
 	when
		fact:Fact(coloum == "getEntityGuidbyNameAndReference")
	then
		String guid = responseHelper.getEntityGuidbyNameAndReference(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));
		fact.setDataAndRow(guid);
		fact.setDataToRowByActionParm(guid);
 end 
 


rule "RelatedEntityGuid"
 	when
 		fact:Fact(coloum == "relatedentityguid")
 	then
 		String guid = responseHelper.getGuid(fact.getDataFromRow(),fact.getDataFromRow("relatedentityname"),"");
 		fact.setDataAndRow(guid);
end

rule "getRateRowGuid"
	when
 		fact:Fact(coloum == "getRateRowGuid")
 	then
 		String guid = responseHelper.getRateRowGuidFromIntent(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));
 		fact.getCurrentRow().put("raterowguid",guid);
 		fact.setDataAndRow(guid);
end 		
 
rule "getPreviousDay"
	 when
 		fact:Fact(coloum == "getPreviousDay")
 	then
 		fact.setDataAndRow(responseHelper.getPreviousDay(fact.getActionDataFromRow(0)));
end
 
 rule "Relation Type"
 	when
 		fact:Fact(coloum == "relationtype")
	then
		fact.setDataAndRow(fact.getDataFromRow("relationtype"));
 end
 
 rule "Datatype"
 	when
 		fact:Fact(coloum == "datatype")
	then
		List<String> datatypeGuids = factsForAttributes.getFactsForAttributes(catalogProperties.getCatalogPropertyValue("Datatype", "Class not found"),fact.getDataFromRow());
		if(datatypeGuids.size()!=0)
		{
			String guid = datatypeGuids.get(0);	
			fact.setDataAndRow(guid);
		}
end
 
 rule "getEntityType"
 	when
 		fact:Fact(coloum == "getEntityType")
	then
		String relation = importUtility.getRelatedEntityType(fact.getFirstActionDataFromRow());
 		fact.setData(relation);
 end
 
 rule "Characteristic"
 	when
 		fact:Fact(coloum == "characteristic")
 	then
 		List<String> datatypeGuids = factsForAttributes.getFactsForAttributes(fact.getDataFromRow("characteristicclassname"),fact.getDataFromRow());
		if(datatypeGuids.size()!=0)
		{
			String guid = datatypeGuids.get(0);	
			fact.setDataAndRow(guid);
		}
end		

 rule "getFactGuid"
 	when
 		fact:Fact(coloum == "getFactGuid")
 	then
 		List<String> datatypeGuids = factsForAttributes.getFactsForAttributes(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));		
		fact.setData(datatypeGuids);
end

 rule "getUnEscapedStringRule"
 	when
 		fact:Fact(coloum == "getUnEscapedStringRule")
 	then
 	String factString = responseHelper.getUnescapedString(fact.getActionDataFromRow(0));		
	fact.setData(factString);
	fact.setDataToRowByActionParm(factString);
end


 rule "getProductChargeClassificationCatServicesGuid"
 	when
 		fact:Fact(coloum == "getProductChargeClassificationCatServicesGuid")
 	then
 		List<String> datatypeGuids = catalogServicesAPI.getClassificationCatServicesGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));		
		fact.setData(datatypeGuids);
end

 rule "getFactGuidSupplyPointType"
 	when
 		fact:Fact(coloum == "getFactGuidSupplyPointType")
 	then
 		ArrayList<String> list = new ArrayList<>();
 		list.add(fact.getActionDataFromRow(1));
 		List<String> datatypeGuids = factsForAttributes.getFactsForAttributes(fact.getActionDataFromRow(0),list);		
		fact.setData(datatypeGuids);
end

rule "getCatServiceGuid"
 	when
 		fact:Fact(coloum == "getCatServiceGuid")
 	then
 		List<String> datatypeGuids = catalogServicesAPI.getGuidList(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),catalogProperties.getCatalogPropertyValue(fact.getActionDataFromRow(2),"Not Found"));		
		fact.setData(datatypeGuids);
		
end	

rule "getOverridesCatServiceGuid"
 	when
 		fact:Fact(coloum == "getOverridesCatServiceGuid")
 	then
 		String factString = responseHelper.getOverridesCatServiceGuid(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1),catalogProperties.getCatalogPropertyValue(fact.getActionDataFromRow(2),"Not Found"));		
		fact.setData(factString);
		
end	

rule "getOverridesValueIdentifier"
 	when
 		fact:Fact(coloum == "getOverridesValueIdentifier")
 	then
 		String factString = responseHelper.getOverridesValueIdentifier(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));		
		fact.setData(factString);
end	

rule "getEntityValuePath"
 	when
 		fact:Fact(coloum == "getEntityValuePath")
 	then
 		List<String> datatypeGuids = responseHelper.getGuidMappingRule(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1));		
		fact.setData(datatypeGuids);
		
end	

rule "getAdjustmentRelation"
 	when
 		fact:Fact(coloum == "getAdjustmentRelation")
 	then
 		if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),"discount"))
 			fact.setData("CBPricing");
 		else if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),"IFRS"))
 			fact.setData("Product_To_Cost_Adjustment_Relation");
 		else
 			fact.setData("Product_To_Charge_Adjustment_Relation");		
end	

rule "getDecoratorClassType"
 	when
 		fact:Fact(coloum == "getDecoratorClassType")
 	then
 		if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),"discount"))
 			fact.setData("CBD_Adjustment_Decorator");
 		else if(StringUtility.containsIgnoreCase(fact.getActionDataFromRow(0),"IFRS"))
 			fact.setData("Cost_Adjustment_Decorator");
 		else
 			fact.setData("Charge_Adjustment_Decorator");		
end

rule "getBusienssID"
	when
		fact:Fact(coloum == "getBusienssID")
	then
		fact.setData(responseHelper.getBusienssIDAsList(fact.getFirstActionDataFromRow()));
end

rule "getBusienssIDUsingGuid"
	when
		fact:Fact(coloum == "getBusienssIDUsingGuid")
	then
		fact.setData(responseHelper.getBusienssIDAsUsingGuidList(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1)));
end

rule "getTargetState"
	when
		fact:Fact(coloum == "getTargetState")
	then
		fact.setData(responseHelper.getTargetState(fact.getActionDataFromRow(0),fact.getActionDataFromRow(1)));
end

rule "Properties"
	when
		fact:Fact(coloum == "getProperites")
	then
		fact.setData(catalogProperties.getCatalogPropertyValue(StringUtility.removeSpaceWithUnderScore(StringUtility.remove(fact.getFirstActionDataFromRow(), '$').trim()), "NA"));
end

rule "getGenericEntityName"
	when
		fact:Fact(coloum == "getGenericEntityName")
	then
		fact.setData(responseHelper.getGenericEntityName(fact.getActionDataFromRow(0)));	
end

rule "getGenericEntityClassType"
	when
		fact:Fact(coloum == "getGenericEntityClassType")
	then
		fact.setData(responseHelper.getGenericEntityClassType(fact.getActionDataFromRow(0)));
end
		
